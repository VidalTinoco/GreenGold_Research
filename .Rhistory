# Convert date column
df <- df %>% mutate(trimestre_date = as.Date(trimestre))
# Clean encoding issues and recode variables
clean_encoding <- function(df, col, recodes) {
df %>% mutate({{ col }} := recode({{ col }}, !!!recodes))
}
# Recode group and subgroup labels
inf_ag <- inf_ag %>%
mutate(across(c(State, Municipality, Group, Subgroup,
`Classification of Formal and Informal Jobs of the First Activity`), as.factor)) %>%
rename(Formal_Informal = `Classification of Formal and Informal Jobs of the First Activity`)
inf_ag <- clean_encoding(inf_ag, Group, c(
"Otros Trabajadores en Actividades Agrícolas, Ganaderas, Forestales, Caza y Pesca, no Clasificados Anteriormente" = "Otros Trabajadores en Actividades Agricolas, Ganaderas, Forestales, Caza y Pesca, no Clasificados Anteriormente",
"Trabajadores en Actividades Agrícolas y Ganaderas" = "Trabajadores en Actividades Agricolas y Ganaderas"
))
inf_ag <- clean_encoding(inf_ag, Subgroup, c(
"Trabajadores en Actividades Agrícola" = "Trabajadores en Actividades Agricola",
"Trabajadores en Actividades Ganaderas y en la Cría de Animales" = "Trabajadores en Actividades Ganaderas y en la Cria de Animales",
"Trabajadores que Combinan Actividades Agrícolas con Ganaderas" = "Trabajadores que Combinan Actividades Agricolas con Ganaderas",
"Trabajadores en Actividades Agrícolas" = "Trabajadores en Actividades Agricolas"
))
inf_ag <- clean_encoding(inf_ag, Municipality, c(
"Coalcomán de Vázquez Pallares" = "Coalcoman",
"Cojumatlán de Régules" = "Cojumatlan",
"Lázaro Cárdenas" = "Lazaro Cardenas",
"Múcica" = "Mugica",
"Maravatío" = "Maravatio",
"Nocupétaro" = "Nocupetaro",
"Numarán" = "Numaran",
"Pátzcuaro" = "Patzcuaro",
"Pajacuarán" = "Pajacuaran",
"Panindícuaro" = "Panindicuaro",
"Parácuaro" = "Paracuaro",
"Peribán" = "Periban",
"Purépero" = "Purepero",
"Puruándiro" = "Puruandiro",
"Queréndaro" = "Querendaro",
"Tacámbaro" = "Tacambaro",
"Tancítaro" = "Tancitaro",
"Tarímbaro" = "Tarimbaro",
"Tangancícuaro" = "Tangancicuaro",
"Tingüindín" = "Tinguindin",
"Tiquicheo de Nicolás Romero" = "Tiquicheo",
"Yurécuaro" = "Yurecuaro",
"Zináparo" = "Zinaparo",
"Zinapécuaro" = "Zinapecuaro",
"Zitácuaro" = "Zitacuaro"
))
# Add treatment variable
var_trat <- read_csv(here("data", "df_final_general_year.csv")) %>%
distinct(mun, trat_2) %>%
mutate(mun = recode(mun, "Cojumatlan de Regules" = "Cojumatlan"))
inf_full <- left_join(inf_ag, var_trat, by = c("Municipality" = "mun"))
# Convert Quarter to date
inf_full <- inf_full %>%
filter(substr(Quarter, 1, 4) <= 2020) %>%
mutate(year = as.numeric(substr(Quarter, 1, 4)),
q = as.numeric(substr(Quarter, 7, 7)),
date = ymd(paste(year, q + 1, 1)) - 1)
# Aggregate workforce and wages by Quarter and Job Type
inf_full <- inf_full %>%
group_by(Quarter, Formal_Informal) %>%
mutate(WF_FI_Qua = sum(Workforce, na.rm = TRUE),
Wage_FI_Qua = mean(`Monthly Wage`, na.rm = TRUE)) %>%
ungroup()
# Create base plot
base_plot <- function(data, yvar, title, ylab, filename) {
p <- ggplot(data, aes(x = date, y = .data[[yvar]], color = Formal_Informal)) +
geom_line() +
geom_point() +
geom_vline(xintercept = ymd("2011-01-01"), linetype = 2) +
geom_text(aes(x = ymd("2011-08-01"), label = "2011", y = max(.data[[yvar]], na.rm = TRUE)*0.8),
inherit.aes = FALSE, color = "seagreen") +
labs(title = title,
x = "Quarter", y = ylab, color = "Type of Employment",
caption = "Source: ENOE") +
scale_color_manual(labels = c("Formal Employment", "Informal Employment"),
values = c("deepskyblue3", "firebrick1")) +
theme_clean()
ggsave(filename, p, path = here("graficas"), dpi = "retina", width = 8, height = 3)
}
# Create base plot
base_plot <- function(data, yvar, title, ylab, filename) {
p <- ggplot(data, aes(x = date, y = .data[[yvar]], color = Formal_Informal)) +
geom_line() +
geom_point() +
geom_vline(xintercept = ymd("2011-01-01"), linetype = 2) +
geom_text(aes(x = ymd("2011-08-01"), label = "2011", y = max(.data[[yvar]], na.rm = TRUE)*0.8),
inherit.aes = FALSE, color = "seagreen") +
labs(title = title,
x = "Quarter", y = ylab, color = "Type of Employment") +
scale_color_manual(labels = c("Formal Employment", "Informal Employment"),
values = c("deepskyblue3", "firebrick1")) +
theme_clean()
ggsave(filename, p, path = here("plots"), dpi = "retina", width = 8, height = 3)
}
# Export plots
base_plot(inf_full, "WF_FI_Qua", "Workers by Employment Type", "Number of Workers", "informality_agjobs.png")
base_plot(inf_full, "Wage_FI_Qua", "Wages by Employment Type", "Mean Monthly Wage", "informality_agjobs_wage.png")
# Libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(readr)
library(tidyr)
library(stringr)
library(lubridate)
library(ggthemes)
library(scales)
library(here)
# Load datasets
df <- read_xlsx(here("data", "informalidad_trim_mich.xlsx"))
inf_ag <- read_xlsx(here("data", "inegi_enoe_clean_mich.xlsx"))
var_trat <- read_csv(here("data", "df_final_general_year.csv"))
# Clean main date column
df <- df %>% mutate(quarter_date = as.Date(trimestre))
# Clean character encoding in categories and municipality names
recode_utf8 <- function(df, vars) {
for (var in vars) {
df[[var]] <- str_replace_all(df[[var]], "\\u00c1", "A")
df[[var]] <- str_replace_all(df[[var]], "\\u00e9", "e")
df[[var]] <- str_replace_all(df[[var]], "\\u00ed", "i")
df[[var]] <- str_replace_all(df[[var]], "\\u00f3", "o")
df[[var]] <- str_replace_all(df[[var]], "\\u00fa", "u")
df[[var]] <- str_replace_all(df[[var]], "\\u00f1", "n")
}
df
}
inf_ag <- recode_utf8(inf_ag, c("Group", "Subgroup", "Municipality"))
# Convert to factors
inf_ag <- inf_ag %>% mutate(across(c(State, Municipality, Group, Subgroup,
`Classification of Formal and Informal Jobs of the First Activity`), factor))
# Fix treatment data frame
var_trat <- var_trat %>%
distinct(mun, trat_2) %>%
mutate(mun = if_else(mun == "Cojumatlan de Regules", "Cojumatlan", mun))
# Join treatment to ENOE
inf_ag <- inf_ag %>%
rename(Formal_Informal = `Classification of Formal and Informal Jobs of the First Activity`)
inf_full <- left_join(inf_ag, var_trat, by = c("Municipality" = "mun"))
# Create year, quarter and date
inf_full <- inf_full %>%
mutate(
year = as.numeric(substr(Quarter, 1, 4)),
q = as.numeric(substr(Quarter, 7, 7)),
date = ymd(paste(year, q + 1, "01")) - 1
) %>%
filter(year <= 2020)
# Compute workforce and wages by quarter/type
inf_full <- inf_full %>%
group_by(Quarter, Formal_Informal) %>%
mutate(
WF_FI_Qua = sum(Workforce, na.rm = TRUE),
Wage_FI_Qua = mean(`Monthly Wage`, na.rm = TRUE)
) %>%
ungroup()
# Plot: Workforce (overall)
plot_workforce <- ggplot(inf_full, aes(x = date, y = WF_FI_Qua, color = Formal_Informal)) +
geom_smooth() +
geom_point() +
geom_vline(xintercept = ymd("2011-01-01"), linetype = 2) +
geom_text(aes(x = ymd("2011-08-01"), y = 25000, label = "2011"), color = "seagreen") +
scale_color_manual(values = c("deepskyblue3", "firebrick1"),
labels = c("Formal Employment", "Informal Employment")) +
labs(title = "Workforce by Employment Type",
x = "Quarter", y = "Workers", color = "Employment Type",
caption = "Source: ENOE") +
theme_clean()
plot_workforce
# Plot: Wages (overall)
plot_wages <- ggplot(inf_full, aes(x = date, y = Wage_FI_Qua, color = Formal_Informal)) +
geom_smooth() +
geom_point() +
geom_vline(xintercept = ymd("2011-01-01"), linetype = 2) +
geom_text(aes(x = ymd("2011-08-01"), y = 2500, label = "2011"), color = "seagreen") +
scale_color_manual(values = c("deepskyblue3", "firebrick1"),
labels = c("Formal Employment", "Informal Employment")) +
labs(title = "Average Monthly Wage by Employment Type",
x = "Quarter", y = "Monthly Wage (MXN)", color = "Employment Type",
caption = "Source: ENOE") +
theme_clean()
plot_wages
# Plot: General Informality Rate
inf_rate_plot <- ggplot(df, aes(x = quarter_date, y = til_1)) +
geom_line(color = "steelblue") +
geom_vline(xintercept = ymd("2011-01-01"), linetype = 2, color = "red") +
geom_text(aes(x = ymd("2011-12-01"), y = 68, label = "2011")) +
labs(title = "Labor Informality Rate in Michoacán",
x = "Quarter", y = "Informality Rate (%)") +
theme_clean()
inf_rate_plot
# Green Gold Script: Informality and Exporters Analysis
# Author: Vidal Mendoza-Tinoco
# Last date modified: 2025-05-02
# Libraries -----
library(dplyr)
library(ggplot2)
library(readxl)
library(readr)
library(tidyr)
library(stringr)
library(lubridate)
library(ggthemes)
library(scales)
library(here)
# Load and clean datasets -----
df <- read_xlsx(here("data", "informalidad_trim_mich.xlsx"))
inf_ag <- read_xlsx(here("data", "inegi_enoe_clean_mich.xlsx"))
var_trat <- read_csv(here("data", "df_final_general_year.csv"))
## Clean main date column
df <- df %>% mutate(quarter_date = as.Date(trimestre))
## Clean character encoding in categories and municipality names
recode_utf8 <- function(df, vars) {
for (var in vars) {
df[[var]] <- str_replace_all(df[[var]], "\\u00c1", "A")
df[[var]] <- str_replace_all(df[[var]], "\\u00e9", "e")
df[[var]] <- str_replace_all(df[[var]], "\\u00ed", "i")
df[[var]] <- str_replace_all(df[[var]], "\\u00f3", "o")
df[[var]] <- str_replace_all(df[[var]], "\\u00fa", "u")
df[[var]] <- str_replace_all(df[[var]], "\\u00f1", "n")
}
df
}
inf_ag <- recode_utf8(inf_ag, c("Group", "Subgroup", "Municipality"))
## Convert to factors
inf_ag <- inf_ag %>% mutate(across(c(State, Municipality, Group, Subgroup,
`Classification of Formal and Informal Jobs of the First Activity`), factor))
## Fix treatment data frame
var_trat <- var_trat %>%
distinct(mun, trat_2) %>%
mutate(mun = if_else(mun == "Cojumatlan de Regules", "Cojumatlan", mun))
## Join treatment to ENOE
inf_ag <- inf_ag %>%
rename(Formal_Informal = `Classification of Formal and Informal Jobs of the First Activity`)
inf_full <- left_join(inf_ag, var_trat, by = c("Municipality" = "mun"))
## Create year, quarter and date
inf_full <- inf_full %>%
mutate(
year = as.numeric(substr(Quarter, 1, 4)),
q = as.numeric(substr(Quarter, 7, 7)),
date = ymd(paste(year, q + 1, "01")) - 1
) %>%
filter(year <= 2020)
## Compute workforce and wages by quarter/type
inf_full <- inf_full %>%
group_by(Quarter, Formal_Informal) %>%
mutate(
WF_FI_Qua = sum(Workforce, na.rm = TRUE),
Wage_FI_Qua = mean(`Monthly Wage`, na.rm = TRUE)
) %>%
ungroup()
# Plot: Workforce (overall) -----
plot_workforce <- ggplot(inf_full, aes(x = date, y = WF_FI_Qua, color = Formal_Informal)) +
geom_smooth() +
geom_point() +
geom_vline(xintercept = ymd("2011-01-01"), linetype = 2) +
geom_text(aes(x = ymd("2011-08-01"), y = 25000, label = "2011"), color = "seagreen") +
scale_color_manual(values = c("deepskyblue3", "firebrick1"),
labels = c("Formal Employment", "Informal Employment")) +
labs(title = "Workforce by Employment Type",
x = "Quarter", y = "Workers", color = "Employment Type",
caption = "Source: ENOE") +
theme_clean()
plot_workforce
ggsave("workforce_by_employment_type.png", plot_workforce, path = "plots", dpi = 300, width = 8, height = 3.5)
# Plot: Wages (overall) -----
plot_wages <- ggplot(inf_full, aes(x = date, y = Wage_FI_Qua, color = Formal_Informal)) +
geom_smooth() +
geom_point() +
geom_vline(xintercept = ymd("2011-01-01"), linetype = 2) +
geom_text(aes(x = ymd("2011-08-01"), y = 2500, label = "2011"), color = "seagreen") +
scale_color_manual(values = c("deepskyblue3", "firebrick1"),
labels = c("Formal Employment", "Informal Employment")) +
labs(title = "Average Monthly Wage by Employment Type",
x = "Quarter", y = "Monthly Wage (MXN)", color = "Employment Type",
caption = "Source: ENOE") +
theme_clean()
plot_wages
ggsave("monthly_wage_by_employment_type.png", plot_wages, path = "plots", dpi = 300, width = 8, height = 3.5)
# Plot: General Informality Rate -----
inf_rate_plot <- ggplot(df, aes(x = quarter_date, y = til_1)) +
geom_line(color = "steelblue") +
geom_vline(xintercept = ymd("2011-01-01"), linetype = 2, color = "red") +
geom_text(aes(x = ymd("2011-12-01"), y = 68, label = "2011")) +
labs(title = "Labor Informality Rate in Michoacán",
x = "Quarter", y = "Informality Rate (%)") +
theme_clean()
inf_rate_plot
ggsave("informality_rate_michoacan.png", inf_rate_plot, path = "plots", dpi = 300, width = 8, height = 3.5)
# Load libraries
library(dplyr)
library(ggplot2)
library(ggthemes)
library(readxl)
library(here)
# Load data
df <- read_xlsx(here("data", "empacadoras_23.xlsx"))
# Quick exploration
summary(df)
# Create treatment period variable
df <- df %>%
mutate(treatment_period = ifelse(year_const >= 2011, "Post-2011 (Export Access)", "Pre-2011"))
# Final plot
plot_exporters <- ggplot(df, aes(x = year_const, fill = treatment_period)) +
geom_histogram(binwidth = 1, boundary = 2010.5, color = "black") +
scale_fill_manual(values = c("darkolivegreen3", "darkgreen")) +
guides(fill = guide_legend(title = "Market Access Period")) +
labs(
x = "Year of Establishment",
y = "Number of Avocado Packing Companies",
title = "Yearly Entry of Avocado Exporters",
caption = "Source: SIGER"
) +
theme_clean()
plot_exporters
# Final plot
plot_exporters <- ggplot(df, aes(x = year_const, fill = treatment_period)) +
geom_histogram(binwidth = 1, boundary = 2010.5, color = "black") +
scale_fill_manual(values = c("darkolivegreen3", "darkgreen")) +
guides(fill = guide_legend(title = "Market Access Period")) +
labs(
x = "Year of Establishment",
y = "Number of Avocado Packing Companies",
title = "Yearly Entry of Avocado Exporters",
) +
theme_clean()
plot_exporters
# Green Gold Script: Avocado harvested
# Author: Vidal Mendoza-Tinoco
# Last date modified: 2025-05-02
# Load libraries -----
library(dplyr)
library(ggplot2)
library(ggthemes)
library(readxl)
library(here)
# Load and clean data -----
df <- read_xlsx(here("data", "empacadoras_23.xlsx"))
## Create treatment period variable
df <- df %>%
mutate(treatment_period = ifelse(year_const >= 2011, "Post-2011 (Export Access)", "Pre-2011"))
# Final plot -----
plot_exporters <- ggplot(df, aes(x = year_const, fill = treatment_period)) +
geom_histogram(binwidth = 1, boundary = 2010.5, color = "black") +
scale_fill_manual(values = c("darkolivegreen3", "darkgreen")) +
guides(fill = guide_legend(title = "Market Access Period")) +
labs(
x = "Year of Establishment",
y = "Number of Avocado Packing Companies",
title = "Yearly Entry of Avocado Exporters",
) +
theme_clean()
plot_exporters
ggsave("exporters_by_year.png", plot_exporters, path = "plots", dpi = "retina", width = 7, height = 3)
rm (list=ls ()) # para vaciar el workspace donde vas a trabajar
install.packages("ggdag")
library(tidyverse)
library(ggdag)
library(ggthemes)
# DAG: Initial Hypothesis -----
hip_0 <- dagify(ineq ~ agric,
labels = c("ineq" = "Inequality",
"agric" = "Agricultural\n Commerce"),
outcome = "ineq",
exposure = "agric",
coords = list(x = c("agric" = 1, "ineq" = 3),
y = c("agric" = 2, "ineq" = 2)))
d_hip_0 <- ggdag_status(hip_0, text = FALSE, layout = "fr") +
theme_dag_blank(legend.position = "none") +
scale_color_manual(values = c("seagreen", "dodgerblue2")) +
geom_dag_label_repel(aes(label = label), colour = "black", show.legend = FALSE) +
geom_dag_edges_arc(edge_color = "orange", curvature = 0)
d_hip_0
ggsave("dag_hip0.png", d_hip_0, path = "plots", dpi = "retina", width = 7, height = 3.5)
## DAG: Literature Hypothesis 1
lit_1 <- dagify(ineq ~ val,
val ~ prod + trade,
prod ~ demand,
trade ~ demand,
demand ~ market,
labels = c("ineq" = "Inequality",
"market" = "Market\nSize",
"demand" = "Demand",
"val" = "Crop\nValue",
"prod" = "Production",
"trade" = "Trade"),
outcome = "ineq",
exposure = "val",
latent = "market",
coords = list(x = c("market" = 1, "demand" = 2, "prod" = 3, "trade" = 3, "val" = 4, "ineq" = 5),
y = c("market" = 2, "demand" = 2, "prod" = 3, "trade" = 1, "val" = 2, "ineq" = 2)))
dag_l1 <- ggdag_status(lit_1, text = FALSE, check_overlap = TRUE, layout = "fr") +
theme_dag_blank(legend.position = "none") +
scale_color_manual(values = c("seagreen", "orange", "dodgerblue2")) +
geom_dag_label_repel(aes(label = label), colour = "black", show.legend = FALSE)
dag_lit1
dag_l1 <- ggdag_status(lit_1, text = FALSE, check_overlap = TRUE, layout = "fr") +
theme_dag_blank(legend.position = "none") +
scale_color_manual(values = c("seagreen", "orange", "dodgerblue2")) +
geom_dag_label_repel(aes(label = label), colour = "black", show.legend = FALSE)
dag_lit1
dag_l1
## DAG: Literature Summary
res_lit <- dagify(ineq ~ wages,
wages ~ trade,
trade ~ prod + access,
prod ~ modern,
labels = c("ineq" = "Inequality",
"wages" = "Wages",
"trade" = "Agricultural\nTrade",
"prod" = "Production\nCapacity",
"access" = "Market\nAccess",
"modern" = "Modernization"),
outcome = "ineq",
exposure = "trade",
latent = "wages",
coords = list(x = c("modern" = 1, "prod" = 2, "access" = 2, "trade" = 3, "wages" = 4, "ineq" = 5),
y = c("modern" = 3, "prod" = 3, "access" = 1, "trade" = 2, "wages" = 2, "ineq" = 2)))
dag_rs <- ggdag_status(res_lit, text = FALSE, check_overlap = TRUE, layout = "fr") +
theme_dag_blank(legend.position = "none") +
scale_color_manual(values = c("seagreen", "orange", "dodgerblue2")) +
geom_dag_label_repel(aes(label = label), colour = "black", show.legend = FALSE)
dag_rs
## DAG: Literature Summary
res_lit <- dagify(ineq ~ wages,
wages ~ trade,
trade ~ prod + access,
prod ~ modern,
labels = c("ineq" = "Inequality",
"wages" = "Wages",
"trade" = "Agricultural\n Commerce",
"prod" = "Production\nCapacity",
"access" = "Market\nAccess",
"modern" = "Modernization"),
outcome = "ineq",
exposure = "trade",
latent = "wages",
coords = list(x = c("modern" = 1, "prod" = 2, "access" = 2, "trade" = 3, "wages" = 4, "ineq" = 5),
y = c("modern" = 3, "prod" = 3, "access" = 1, "trade" = 2, "wages" = 2, "ineq" = 2)))
dag_rs <- ggdag_status(res_lit, text = FALSE, check_overlap = TRUE, layout = "fr") +
theme_dag_blank(legend.position = "none") +
scale_color_manual(values = c("seagreen", "orange", "dodgerblue2")) +
geom_dag_label_repel(aes(label = label), colour = "black", show.legend = FALSE)
dag_rs
# Green Gold Script: DAGs
# Author: Vidal Mendoza-Tinoco
# Last date modified: 2025-05-02
# Load libraries -----
library(tidyverse)
library(ggdag)
library(ggthemes)
# Available layouts: 'star', 'circle', 'gem', 'dh', 'graphopt', 'grid', 'mds', 'randomly', 'fr', 'kk', 'drl', 'lgl'
# DAG: Initial Hypothesis -----
hip_0 <- dagify(ineq ~ agric,
labels = c("ineq" = "Inequality",
"agric" = "Agricultural\n Commerce"),
outcome = "ineq",
exposure = "agric",
coords = list(x = c("agric" = 1, "ineq" = 3),
y = c("agric" = 2, "ineq" = 2)))
d_hip_0 <- ggdag_status(hip_0, text = FALSE, layout = "fr") +
theme_dag_blank(legend.position = "none") +
scale_color_manual(values = c("seagreen", "dodgerblue2")) +
geom_dag_label_repel(aes(label = label), colour = "black", show.legend = FALSE) +
geom_dag_edges_arc(edge_color = "orange", curvature = 0)
d_hip_0
ggsave("dag_hip0.png", d_hip_0, path = "plots", dpi = "retina", width = 7, height = 3.5)
## DAG: Literature Hypothesis 1
lit_1 <- dagify(ineq ~ val,
val ~ prod + trade,
prod ~ demand,
trade ~ demand,
demand ~ market,
labels = c("ineq" = "Inequality",
"market" = "Market\nSize",
"demand" = "Demand",
"val" = "Crop\nValue",
"prod" = "Production",
"trade" = "Trade"),
outcome = "ineq",
exposure = "val",
latent = "market",
coords = list(x = c("market" = 1, "demand" = 2, "prod" = 3, "trade" = 3, "val" = 4, "ineq" = 5),
y = c("market" = 2, "demand" = 2, "prod" = 3, "trade" = 1, "val" = 2, "ineq" = 2)))
dag_l1 <- ggdag_status(lit_1, text = FALSE, check_overlap = TRUE, layout = "fr") +
theme_dag_blank(legend.position = "none") +
scale_color_manual(values = c("seagreen", "orange", "dodgerblue2")) +
geom_dag_label_repel(aes(label = label), colour = "black", show.legend = FALSE)
dag_l1
ggsave("dag_lit1.png", dag_l1, path = "plots", dpi = "retina", width = 7, height = 3.5)
## DAG: Literature Summary
res_lit <- dagify(ineq ~ wages,
wages ~ trade,
trade ~ prod + access,
prod ~ modern,
labels = c("ineq" = "Inequality",
"wages" = "Wages",
"trade" = "Agricultural\n Commerce",
"prod" = "Production\nCapacity",
"access" = "Market\nAccess",
"modern" = "Modernization"),
outcome = "ineq",
exposure = "trade",
latent = "wages",
coords = list(x = c("modern" = 1, "prod" = 2, "access" = 2, "trade" = 3, "wages" = 4, "ineq" = 5),
y = c("modern" = 3, "prod" = 3, "access" = 1, "trade" = 2, "wages" = 2, "ineq" = 2)))
dag_rs <- ggdag_status(res_lit, text = FALSE, check_overlap = TRUE, layout = "fr") +
theme_dag_blank(legend.position = "none") +
scale_color_manual(values = c("seagreen", "orange", "dodgerblue2")) +
geom_dag_label_repel(aes(label = label), colour = "black", show.legend = FALSE)
dag_rs
ggsave("dag_rs.png", dag_rs, path = "plots", dpi = "retina", width = 8, height = 3.5)
